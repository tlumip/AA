package com.hbaspecto.pecas.sd.orm;
import simpleorm.dataset.*;
import simpleorm.utils.*;
import simpleorm.sessionjdbc.SSessionJdbc;
import com.hbaspecto.pecas.sd.SpaceTypesI;

/**	Base class of table local_effect_parameters.<br>
*Do not edit as will be regenerated by running SimpleORMGenerator
*Generated on Fri Sep 25 16:13:29 MDT 2009
***/
abstract class LocalEffectParameters_gen extends SRecordInstance implements java.io.Serializable {

   public static final SRecordMeta <LocalEffectParameters> meta = new SRecordMeta<LocalEffectParameters>(LocalEffectParameters.class, "local_effect_parameters");

//Columns in table
   public static final SFieldInteger LocalEffectId =
      new SFieldInteger(meta, "local_effect_id",
         new SFieldFlags[] { SFieldFlags.SPRIMARY_KEY, SFieldFlags.SMANDATORY });

   public static final SFieldInteger SpaceTypeId =
      new SFieldInteger(meta, "space_type_id",
         new SFieldFlags[] { SFieldFlags.SPRIMARY_KEY, SFieldFlags.SMANDATORY });

   public static final SFieldInteger FunctionType =
      new SFieldInteger(meta, "function_type");

   public static final SFieldDouble MaxDist =
      new SFieldDouble(meta, "max_dist");

   public static final SFieldDouble ThetaParameter =
      new SFieldDouble(meta, "theta_parameter");

//Column getters and setters
   public int get_LocalEffectId(){ return getInt(LocalEffectId);}
   public void set_LocalEffectId( int value){setInt( LocalEffectId,value);}

   public int get_SpaceTypeId(){ return getInt(SpaceTypeId);}
   public void set_SpaceTypeId( int value){setInt( SpaceTypeId,value);}

   public int get_FunctionType(){ return getInt(FunctionType);}
   public void set_FunctionType( int value){setInt( FunctionType,value);}

   public double get_MaxDist(){ return getDouble(MaxDist);}
   public void set_MaxDist( double value){setDouble( MaxDist,value);}

   public double get_ThetaParameter(){ return getDouble(ThetaParameter);}
   public void set_ThetaParameter( double value){setDouble( ThetaParameter,value);}

//Foreign key getters and setters
   public LocalEffects get_LOCAL_EFFECTS(SSessionJdbc ses){
     try{
/** Old code: 
        return LocalEffects.findOrCreate(get_LocalEffectId());
New code below :**/
        return ses.findOrCreate(LocalEffects.meta,new Object[]{ 
        	get_LocalEffectId(),
 });
     } catch (SException e) {
        if (e.getMessage().indexOf("Null Primary key") > 0) {
          return null;
        }
        throw e;
     }
   }
   public void set_LOCAL_EFFECTS( LocalEffects value){
      set_LocalEffectId( value.get_LocalEffectId());
   }

   public SpaceTypesI get_SPACE_TYPES_I(SSessionJdbc ses){
     try{
/** Old code: 
        return SpaceTypesI.findOrCreate(get_SpaceTypeId());
New code below :**/
        return ses.findOrCreate(SpaceTypesI.meta,new Object[]{ 
        	get_SpaceTypeId(),
 });
     } catch (SException e) {
        if (e.getMessage().indexOf("Null Primary key") > 0) {
          return null;
        }
        throw e;
     }
   }
   public void set_SPACE_TYPES_I( SpaceTypesI value){
      set_SpaceTypeId( value.get_SpaceTypeId());
   }

//Find and create
   public static LocalEffectParameters findOrCreate( SSessionJdbc ses ,int _LocalEffectId, int _SpaceTypeId ){
      return ses.findOrCreate(meta, new Object[] {new Integer( _LocalEffectId), new Integer( _SpaceTypeId)});
   }
   public static LocalEffectParameters findOrCreate( SSessionJdbc ses,LocalEffects _ref, int _SpaceTypeId){
      return findOrCreate( ses, _ref.get_LocalEffectId(), _SpaceTypeId);
   }

   public static LocalEffectParameters findOrCreate( SSessionJdbc ses,SpaceTypesI _ref, int _LocalEffectId){
      return findOrCreate( ses, _LocalEffectId, _ref.get_SpaceTypeId());
   }

   public SRecordMeta <LocalEffectParameters> getMeta() {
       return meta;
   }
}
